* Original
The original sshlpr script is from
http://www.masella.name/technical/sshlpr.html
** Original docs
SSH-LPR Backend for CUPS

So, you want to print from off campus or your personal notebook on
campus? Well, it's easy with CUPS. This is a SSH-LPR backend that lets
you create printers on remote systems that you can only access through
SSH. For this to work, you are going to need CUPS, OpenSSH and a
remote host with lpr. You must be able to log into the system without
entering a password. That is, using a password-less key pair.

To begin, copy the following into /usr/lib/cups/backend/sshlpr and
make it executable.

  ./sshlpr

Now, restart CUPS and add a printer. Select the SSH-LPR back end and
enter a URI in the form sshlpr://[[localuser:]remoteuser@]server/queue
where remoteuser is the remote user-name if it is different from the
local name of the user who is printing, localuser is the user account
the request should be made from if it is different from the user who
is making the request, server is the host you want and queue is the
remote printer name.

So, say you want to print to the GAFF lab. Let's say your user
accounts are the same (i.e., your home user name is the same as your
NEXUS user-name) and your classmate also has an account on your system
also with harmonised names. Then, you can use the URI
sshlpr://engage.uwaterloo.ca/gaff. Now, say your user-names are
different, but you want to print as jrhacker, then you can use
sshlpr://jrhack@engage.uwaterloo.ca/gaff. This requires that each of
you has a key in jrhacker's account on Engage. If you want to just use
one pair, stored in the local user jay, then use
sshlpr://jay:jrhack@engage.uwaterloo.ca/gaff.

Now, to print, just use it like any other CUPS printer.

This script makes use of su to become users to access their SSH
keys. If CUPS runs as root, this is not a problem, but if it does not,
you will need to add a line printuser:ALL:NOPASS to /etc/suauth where
printuser is the user that CUPS runs as.

And a quick way to dump all the printer names in the printcap file is

  grep "^[a-z].*:" /etc/printcap | /usr/bin/sed -e '/^lp/d;s/[:|].*//'.

Sat, 18 Sep 2010 08:11:14 -0400

* Changes
** Use a special ssh key to print
See the "-i <key>" part of the final ssh command.
** Pass options to lpr on remote host
E.g. for duplex printing, we need to pass -o options.
** Send errors back to GUI when failing
Use logging API to communicate with the user / printer GUI.

** Created ./lpr-shell.sh restricted shell
** Run script as lp user, not root and "local" user
Script only runs as lp user now and "local" user to su to is ignored.
* Docs
** Installation
These instructions are for running the script as the unprivileged lp
user.

- Copy sshlpr script to /usr/lib/cups/backend/sshlpr.

  : sudo cp ~/v/conf/sshlpr/sshlpr /usr/lib/cups/backend && sudo chmod 0555 /usr/lib/cups/backend/sshlpr

  Make sure to change ownership to root:root, to avoid
  cups-insecure-filter-warning.

  The filter man page
  (http://www.cups.org/documentation.php/api-filter.html#SECURITY)
  says:

    File Permissions

    For security reasons, CUPS will only run filters and backends that
    are owned by root and do not have world or group write
    permissions. The recommended permissions for filters and backends
    are 0555 - read and execute but no write. Backends that must run as
    root should use permissions of 0500 - read and execute by root, no
    access for other users. Write permissions can be enabled for the
    root user only.

    To avoid a warning message, the directory containing your filter(s)
    must also be owned by root and have world and group write disabled -
    permissions of 0755 or 0555 are strongly encouraged.
- Install the private ssh key for the lp user.

  The lp user's "home dir" /var/spool/lpd did not exist for me:

  : sudo mkdir -p `readlink -f ~lp`/.ssh

  Copy the existing print key (or set up a new one):

  : sudo cp ~/.ssh/keys-to-not-try-automatically/id_rsa_linuxlab_print `readlink -f ~lp`/.ssh/id_rsa
  : sudo chown -R lp: `readlink -f ~lp`

- Install the public ssh key on the remote host.

  Use the restricted shell lpr-shell.sh.  I.e., add a line like

  : command="~/local/scripts/lpr-shell.sh",no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAwdW8Opyavu21mMJa7Bzht/Xw4yPhS89y/yq7HuACUmw5XalgI4IBnsaSwOLEJO5ZGWL/NCzDPzweddIdvhBllABBp2kHm9xm1QqhVBWvHhJvqf2LpkBby7J3YR+QX0l9BpaxfRmVJVGNcULEYqWXlo2CfgQvKbBGrpN60fk5Vi5+oYZLl+ZwJmzz2OBMIEwxCYVhPPzK0eQH/MBvSjvp0AYRIoj1QjGPdfkpfn3KChmYYECYDqpTP7tkQUEtb43vMwUP5bpbTYKikw9Kfv0nYdq7eGfNJpModC1xdN969VrjsBafg/23QIRTmqOasrp4htjPun8zYBOPw78YfvAetw== id_rsa_linuxlab_print

  to ~/.ssh/authorized_keys on the remote host.

- Add a new printer in CUPS.

  The system-config-printer GUI is nice:
  - Click "add".
  - Choose "other" and enter URI like
    : sshlpr://ntc2@linuxlab.cs.pdx.edu/fab115bw1
  - Go through the guided dialog to find a driver.

    Some drivers work better than others, so start with the
    recommended, but try others if something doesn't work (duplex,
    scaling, resolution, ...).
- Make sure lp can ssh to the remote host using the special key.

  Trying sshing from the command line as root, using the ssh command
  corresponding to the URI entered above.

  : sudo -u lp -i
  : ssh ntc2@linuxlab.cs.pdx.edu

  In particular, we may need the remote host's public key to be in
  known_hosts, and the manual sshing will set this up.

  See /var/log/cups/error_log for the exact command attempted by the
  sshlpr script.

** CUPS docs
- filter/backend docs:
  - http://www.cups.org/documentation.php/api-filter.html
    - overview
    - includes log message format: "Filters and backends communicate
      with the scheduler by writing messages to the standard error
      file."
  - http://www.cups.org/documentation.php/doc-1.7/man-backend.html
    - includes exit codes
    - backends are a special case of filters? in any case, filter docs
      are more detailed
    - permissions: "Backends without world execute permissions are run
      as the root user. Otherwise, the backend is run using an
      unprivileged user account, typically "lp"."
  - http://www.cups.org/documentation.php/doc-1.7/man-filter.html?TOPIC=Man+Pages
    - includes env variables, and in particular mentions that PPD
      contains path to PPD file for current printer, and elsewhere
      mentions that defaults specified in PPD file may not be passed
      in options on the command line.
  - http://www.cups.org/documentation.php/doc-1.7/man-cupsfilter.html?TOPIC=Man+Pages
    - manually apply a filter! could be useful for a rewrite of
      sshlpr: use this to manually process the file, and then just cat
      over ssh?
